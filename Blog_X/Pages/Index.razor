@page "/"
@inject IPostInterface postinterface
<div>
    @if(isLoading){
        <p>Loading</p>
    }else{
        @if(posts.Count >0){
            @foreach(var post in posts){
            <div class="card">
                <img src="@post.ImageUrl" alt="">
                <div>
                    <h3>@post.Title</h3>
                    <p>@post.Description</p>
                </div>
            </div>
            }
        }else{
            <p>No posts found!!!!</p>
        }
    }
</div>

@code{

    public List<PostDto> posts = new List<PostDto>();
    
    private bool isLoading = true;

    @* private string role { get; set; }
    private bool authenticated { get; set; } *@

    @* [CascadingParameter]
    public Task<AuthenticationState> _authState { get; set; } *@

    protected override async Task OnInitializedAsync(){
        posts = await postinterface.GetPostsAsync();
        isLoading = false;

        @* var authState = await _authState;
        role = authState.User.FindFirst("role")?.Value;
        authenticated = authState.User.Identity.IsAuthenticated;
        Console.WriteLine(authenticated); *@
    }
}